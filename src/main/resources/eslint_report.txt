[
  {
    "filePath":"/app/.eslintrc.js",
    "messages":[ ],
    "suppressedMessages":[ ],
    "errorCount":0,
    "fatalErrorCount":0,
    "warningCount":0,
    "fixableErrorCount":0,
    "fixableWarningCount":0,
    "usedDeprecatedRules":[ ]
  },
  {
    "filePath":"/app/dycalendar.js",
    "messages":[
      {
        "ruleId":"no-unused-vars",
        "severity":1,
        "message":"'self' is assigned a value but never used.",
        "line":529,
        "column":13,
        "nodeType":"Identifier",
        "messageId":"unusedVar",
        "endLine":529,
        "endColumn":17
      }
    ],
    "suppressedMessages":[ ],
    "errorCount":0,
    "fatalErrorCount":0,
    "warningCount":1,
    "fixableErrorCount":0,
    "fixableWarningCount":0,
    "source":"/*!\r\n * dyCalendar is a JavaScript library for creating Calendar.\r\n *\r\n * Author: Yusuf Shakeel\r\n * https://github.com/yusufshakeel\r\n *\r\n * GitHub Link: https://github.com/yusufshakeel/dyCalendarJS\r\n *\r\n * MIT license\r\n * Copyright (c) 2016 Yusuf Shakeel\r\n *\r\n * Date: 2014-08-17 sunday\r\n */\r\n/*! dyCalendarJS | (c) 2016 Yusuf Shakeel | https://github.com/yusufshakeel/dyCalendarJS */\r\n(function (global) {\r\n\r\n    \"use strict\";\r\n\r\n    var\r\n        //this will be used by the user.\r\n        dycalendar = {},\r\n\r\n        //window document\r\n        document = global.document,\r\n\r\n        //starting year\r\n        START_YEAR = 1900,\r\n\r\n        //end year\r\n        END_YEAR = 9999,\r\n\r\n        //name of the months\r\n        monthName = {\r\n            full: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            mmm: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        },\r\n\r\n        //name of the days\r\n        dayName = {\r\n            full: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n            d: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\r\n            dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\r\n            ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n        };\r\n\r\n    /**\r\n     * this function will create month table.\r\n     *\r\n     * @param object data   this contains the calendar data\r\n     * @param object option this is the settings object\r\n     * @return html\r\n     */\r\n    function createMonthTable(data, option) {\r\n\r\n        var\r\n            table, tr, td,\r\n            r, c, count;\r\n\r\n        table = document.createElement(\"table\");\r\n        tr = document.createElement(\"tr\");\r\n\r\n        //create 1st row for the day letters\r\n        for (c = 0; c <= 6; c = c + 1) {\r\n            td = document.createElement(\"td\");\r\n            td.innerHTML = \"SMTWTFS\"[c];\r\n            tr.appendChild(td);\r\n        }\r\n        table.appendChild(tr);\r\n\r\n        //create 2nd row for dates\r\n        tr = document.createElement(\"tr\");\r\n\r\n        //blank td\r\n        for (c = 0; c <= 6; c = c + 1) {\r\n            if (c === data.firstDayIndex) {\r\n                break;\r\n            }\r\n            td = document.createElement(\"td\");\r\n            tr.appendChild(td);\r\n        }\r\n\r\n        //remaining td of dates for the 2nd row\r\n        count = 1;\r\n        while (c <= 6) {\r\n            td = document.createElement(\"td\");\r\n            td.innerHTML = count;\r\n            if (data.today.date === count && data.today.monthIndex === data.monthIndex && option.highlighttoday === true) {\r\n                td.setAttribute(\"class\", \"dycalendar-today-date\");\r\n            }\r\n            if (option.date === count && option.month === data.monthIndex && option.highlighttargetdate === true) {\r\n                td.setAttribute(\"class\", \"dycalendar-target-date\");\r\n            }\r\n            tr.appendChild(td);\r\n            count = count + 1;\r\n            c = c + 1;\r\n        }\r\n        table.appendChild(tr);\r\n\r\n        //create remaining rows\r\n        for (r = 3; r <= 7; r = r + 1) {\r\n            tr = document.createElement(\"tr\");\r\n            for (c = 0; c <= 6; c = c + 1) {\r\n                if (count > data.totaldays) {\r\n                    table.appendChild(tr);\r\n                    return table;\r\n                }\r\n                td = document.createElement('td');\r\n                td.innerHTML = count;\r\n                if (data.today.date === count && data.today.monthIndex === data.monthIndex && option.highlighttoday === true) {\r\n                    td.setAttribute(\"class\", \"dycalendar-today-date\");\r\n                }\r\n                if (option.date === count && option.month === data.monthIndex && option.highlighttargetdate === true) {\r\n                    td.setAttribute(\"class\", \"dycalendar-target-date\");\r\n                }\r\n                count = count + 1;\r\n                tr.appendChild(td);\r\n            }\r\n            table.appendChild(tr);\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n    /**\r\n     * this function will draw Calendar Month Table\r\n     *\r\n     * @param object data   this contains the calendar data\r\n     * @param object option this is the settings object\r\n     * @return html\r\n     */\r\n    function drawCalendarMonthTable(data, option) {\r\n\r\n        var\r\n            table,\r\n            div, container, elem;\r\n\r\n        //get table\r\n        table = createMonthTable(data, option);\r\n\r\n        //calendar container\r\n        container = document.createElement(\"div\");\r\n        container.setAttribute(\"class\", \"dycalendar-month-container\");\r\n\r\n        //-------------------------- Header ------------------\r\n\r\n        //header div\r\n        div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"dycalendar-header\");\r\n        div.setAttribute(\"data-option\", JSON.stringify(option));\r\n\r\n        //prev button\r\n        if (option.prevnextbutton === \"show\") {\r\n            elem = document.createElement(\"span\");\r\n            elem.setAttribute(\"class\", \"dycalendar-prev-next-btn prev-btn\");\r\n            elem.setAttribute(\"data-date\", option.date);\r\n            elem.setAttribute(\"data-month\", option.month);\r\n            elem.setAttribute(\"data-year\", option.year);\r\n            elem.setAttribute(\"data-btn\", \"prev\");\r\n            elem.innerHTML = \"&lt;\";\r\n            //add prev button span to header div\r\n            div.appendChild(elem);\r\n        }\r\n\r\n        //month span\r\n        elem = document.createElement(\"span\");\r\n        elem.setAttribute(\"class\", \"dycalendar-span-month-year\");\r\n        if (option.monthformat === \"mmm\") {\r\n            elem.innerHTML = data.monthName + \" \" + data.year;\r\n        } else if (option.monthformat === \"full\") {\r\n            elem.innerHTML = data.monthNameFull + \" \" + data.year;\r\n        }\r\n\r\n        //add month span to header div\r\n        div.appendChild(elem);\r\n\r\n        //next button\r\n        if (option.prevnextbutton === \"show\") {\r\n            elem = document.createElement(\"span\");\r\n            elem.setAttribute(\"class\", \"dycalendar-prev-next-btn next-btn\");\r\n            elem.setAttribute(\"data-date\", option.date);\r\n            elem.setAttribute(\"data-month\", option.month);\r\n            elem.setAttribute(\"data-year\", option.year);\r\n            elem.setAttribute(\"data-btn\", \"next\");\r\n            elem.innerHTML = \"&gt;\";\r\n            //add prev button span to header div\r\n            div.appendChild(elem);\r\n        }\r\n\r\n        //add header div to container\r\n        container.appendChild(div);\r\n\r\n        //-------------------- Today button ----------------\r\n\r\n        //today button div\r\n        if (option.todaybutton === \"show\") {\r\n            div = document.createElement(\"div\");\r\n            div.setAttribute(\"class\", \"dycalendar-today-btn\");\r\n            div.setAttribute(\"data-option\", JSON.stringify(option));\r\n\r\n            //today button\r\n            elem = document.createElement(\"span\");\r\n            elem.setAttribute(\"class\", \"dycalendar-today-btn today-btn\");\r\n            elem.setAttribute(\"data-date\", option.date);\r\n            elem.setAttribute(\"data-month\", option.month);\r\n            elem.setAttribute(\"data-year\", option.year);\r\n            elem.setAttribute(\"data-btn\", \"today\");\r\n            elem.innerHTML = \"Today\";\r\n            //add prev button span to header div\r\n            div.appendChild(elem);\r\n\r\n            container.appendChild(div);\r\n        }\r\n\r\n        //-------------------------- Body ------------------\r\n\r\n        //body div\r\n        div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"dycalendar-body\");\r\n        div.appendChild(table);\r\n\r\n        //add body div to container div\r\n        container.appendChild(div);\r\n\r\n        //return container\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * this function will draw Calendar Day\r\n     *\r\n     * @param object data   this contains the calendar data\r\n     * @param object option this is the settings object\r\n     * @return html\r\n     */\r\n    function drawCalendarDay(data, option) {\r\n\r\n        var\r\n            div, container, elem;\r\n\r\n        //calendar container\r\n        container = document.createElement(\"div\");\r\n        container.setAttribute(\"class\", \"dycalendar-day-container\");\r\n\r\n        //-------------------------- Header ------------------\r\n\r\n        //header div\r\n        div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"dycalendar-header\");\r\n\r\n        //day span\r\n        elem = document.createElement(\"span\");\r\n        elem.setAttribute(\"class\", \"dycalendar-span-day\");\r\n        if (option.dayformat === \"ddd\") {\r\n            elem.innerHTML = dayName.ddd[data.targetedDayIndex];\r\n        } else if (option.dayformat === \"full\") {\r\n            elem.innerHTML = dayName.full[data.targetedDayIndex];\r\n        }\r\n\r\n        //add day span to footer div\r\n        div.appendChild(elem);\r\n\r\n        //add header div to container\r\n        container.appendChild(div);\r\n\r\n        //-------------------------- Body ------------------\r\n\r\n        //body div\r\n        div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"dycalendar-body\");\r\n\r\n        //date span\r\n        elem = document.createElement(\"span\");\r\n        elem.setAttribute(\"class\", \"dycalendar-span-date\");\r\n        elem.innerHTML = data.date;\r\n\r\n        //add date span to body div\r\n        div.appendChild(elem);\r\n\r\n        //add body div to container\r\n        container.appendChild(div);\r\n\r\n        //-------------------------- Footer ------------------\r\n\r\n        //footer div\r\n        div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"dycalendar-footer\");\r\n\r\n        //month span\r\n        elem = document.createElement(\"span\");\r\n        elem.setAttribute(\"class\", \"dycalendar-span-month-year\");\r\n        if (option.monthformat === \"mmm\") {\r\n            elem.innerHTML = data.monthName + \" \" + data.year;\r\n        } else if (option.monthformat === \"full\") {\r\n            elem.innerHTML = data.monthNameFull + \" \" + data.year;\r\n        }\r\n\r\n        //add month span to footer div\r\n        div.appendChild(elem);\r\n\r\n        //add footer div to container\r\n        container.appendChild(div);\r\n\r\n        //return container\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * this function will extend source object with defaults object.\r\n     *\r\n     * @param object source     this is the source object\r\n     * @param object defaults   this is the default object\r\n     * @return object\r\n     */\r\n    function extendSource(source, defaults) {\r\n        var property;\r\n        for (property in defaults) {\r\n            if (source.hasOwnProperty(property) === false) {\r\n                source[property] = defaults[property];\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * This function will return calendar detail.\r\n     *\r\n     * @param integer year        1900-9999 (optional) if not set will consider\r\n     *                          the current year.\r\n     * @param integer month        0-11 (optional) 0 = Jan, 1 = Feb, ... 11 = Dec,\r\n     *                          if not set will consider the current month.\r\n     * @param integer date      1-31 (optional)\r\n     * @return boolean|object    if error return false, else calendar detail\r\n     */\r\n    function getCalendar(year, month, date) {\r\n\r\n        var\r\n            dateObj = new Date(),\r\n            dateString,\r\n            result = {},\r\n            idx;\r\n\r\n        if (year < START_YEAR || year > END_YEAR) {\r\n            global.console.error(\"Invalid Year\");\r\n            return false;\r\n        }\r\n        if (month > 11 || month < 0) {\r\n            global.console.error(\"Invalid Month\");\r\n            return false;\r\n        }\r\n        if (date > 31 || date < 1) {\r\n            global.console.error(\"Invalid Date\");\r\n            return false;\r\n        }\r\n\r\n        result.year = year;\r\n        result.month = month;\r\n        result.date = date;\r\n\r\n        //today\r\n        result.today = {};\r\n        dateString = dateObj.toString().split(\" \");\r\n\r\n        idx = dayName.ddd.indexOf(dateString[0]);\r\n        result.today.dayIndex = idx;\r\n        result.today.dayName = dateString[0];\r\n        result.today.dayFullName = dayName.full[idx];\r\n\r\n        idx = monthName.mmm.indexOf(dateString[1]);\r\n        result.today.monthIndex = idx;\r\n        result.today.monthName = dateString[1];\r\n        result.today.monthNameFull = monthName.full[idx];\r\n\r\n        result.today.date = dateObj.getDate();\r\n\r\n        result.today.year = dateString[3];\r\n\r\n        //get month-year first day\r\n        dateObj.setDate(1);\r\n        dateObj.setMonth(month);\r\n        dateObj.setFullYear(year);\r\n        dateString = dateObj.toString().split(\" \");\r\n\r\n        idx = dayName.ddd.indexOf(dateString[0]);\r\n        result.firstDayIndex = idx;\r\n        result.firstDayName = dateString[0];\r\n        result.firstDayFullName = dayName.full[idx];\r\n\r\n        idx = monthName.mmm.indexOf(dateString[1]);\r\n        result.monthIndex = idx;\r\n        result.monthName = dateString[1];\r\n        result.monthNameFull = monthName.full[idx];\r\n\r\n        //get total days for the month-year\r\n        dateObj.setFullYear(year);\r\n        dateObj.setMonth(month + 1);\r\n        dateObj.setDate(0);\r\n        result.totaldays = dateObj.getDate();\r\n\r\n        //get month-year targeted date\r\n        dateObj.setFullYear(year);\r\n        dateObj.setMonth(month);\r\n        dateObj.setDate(date);\r\n        dateString = dateObj.toString().split(\" \");\r\n\r\n        idx = dayName.ddd.indexOf(dateString[0]);\r\n        result.targetedDayIndex = idx;\r\n        result.targetedDayName = dateString[0];\r\n        result.targetedDayFullName = dayName.full[idx];\r\n\r\n        return result;\r\n\r\n    }\r\n\r\n    /**\r\n     * this function will handle the on click event.\r\n     */\r\n    function onClick() {\r\n\r\n        document.body.onclick = function (e) {\r\n\r\n            //get event object (window.event for IE compatibility)\r\n            e = global.event || e;\r\n\r\n            var\r\n                //get target dom object reference\r\n                targetDomObject = e.target || e.srcElement,\r\n\r\n                //other variables\r\n                date, month, year, btn, option, dateObj;\r\n\r\n            const today = new Date();\r\n\r\n            //prev-next button click\r\n            //extra checks to make sure object exists and contains the class of interest\r\n            if ((targetDomObject) && (targetDomObject.classList) && (targetDomObject.classList.contains(\"dycalendar-prev-next-btn\"))) {\r\n                date = parseInt(targetDomObject.getAttribute(\"data-date\"));\r\n                month = parseInt(targetDomObject.getAttribute(\"data-month\"));\r\n                year = parseInt(targetDomObject.getAttribute(\"data-year\"));\r\n                btn = targetDomObject.getAttribute(\"data-btn\");\r\n                option = JSON.parse(targetDomObject.parentElement.getAttribute(\"data-option\"));\r\n\r\n                if (btn === \"prev\") {\r\n                    month = month - 1;\r\n                    if (month < 0) {\r\n                        year = year - 1;\r\n                        month = 11;\r\n                    }\r\n                }\r\n                else if (btn === \"next\") {\r\n                    month = month + 1;\r\n                    if (month > 11) {\r\n                        year = year + 1;\r\n                        month = 0;\r\n                    }\r\n                }\r\n\r\n                option.date = date;\r\n                option.month = month;\r\n                option.year = year;\r\n\r\n                drawCalendar(option);\r\n            }\r\n\r\n            //today button click\r\n            //extra checks to make sure object exists and contains the class of interest\r\n            if ((targetDomObject) && (targetDomObject.classList) && (targetDomObject.classList.contains(\"dycalendar-today-btn\"))) {\r\n                date = parseInt(targetDomObject.getAttribute(\"data-date\"));\r\n                month = parseInt(targetDomObject.getAttribute(\"data-month\"));\r\n                year = parseInt(targetDomObject.getAttribute(\"data-year\"));\r\n                btn = targetDomObject.getAttribute(\"data-btn\");\r\n                option = JSON.parse(targetDomObject.parentElement.getAttribute(\"data-option\"));\r\n\r\n                date = today.getDate();\r\n                month = today.getMonth();\r\n                year = today.getFullYear();\r\n\r\n                option.date = date;\r\n                option.month = month;\r\n                option.year = year;\r\n\r\n                drawCalendar(option);\r\n            }\r\n\r\n            //month click\r\n            //extra checks to make sure object exists and contains the class of interest\r\n            if ((targetDomObject) && (targetDomObject.classList) && (targetDomObject.classList.contains(\"dycalendar-span-month-year\"))) {\r\n                option = JSON.parse(targetDomObject.parentElement.getAttribute(\"data-option\"));\r\n                dateObj = new Date();\r\n\r\n                option.date = dateObj.getDate();\r\n                option.month = dateObj.getMonth();\r\n                option.year = dateObj.getFullYear();\r\n\r\n                drawCalendar(option);\r\n            }\r\n        };\r\n    }\r\n\r\n    //------------------------------ dycalendar.draw() ----------------------\r\n\r\n    /**\r\n     * this function will draw the calendar based on user preferences.\r\n     *\r\n     * option = {\r\n     *  target : \"#id|.class\"   //(mandatory) for id use #id | for class use .class\r\n     *  type : \"calendar-type\"  //(optional) values: \"day|month\" (default \"day\")\r\n     *  month : \"integer\"       //(optional) value 0-11, where 0 = January, ... 11 = December (default current month)\r\n     *  year : \"integer\"        //(optional) example 1990. (default current year)\r\n     *  date : \"integer\"        //(optional) example 1-31. (default current date)\r\n     *  monthformat : \"full\"    //(optional) values: \"mmm|full\" (default \"full\")\r\n     *  dayformat : \"full\"      //(optional) values: \"ddd|full\" (default \"full\")\r\n     *  highlighttoday : boolean    //(optional) (default false) if true will highlight today's date\r\n     *  highlighttargetdate : boolean   //(optional) (default false) if true will highlight targeted date of the month year\r\n     *  prevnextbutton : \"hide\"         //(optional) (default \"hide\") (values: \"show|hide\") if set to \"show\" it will show the nav button (prev|next)\r\n     * }\r\n     *\r\n     * @param object option     user preferences\r\n     * @return boolean          true if success, false otherwise\r\n     */\r\n    dycalendar.draw = function (option) {\r\n\r\n        //check if option is passed or not\r\n        if (typeof option === \"undefined\") {\r\n            global.console.error(\"Option missing\");\r\n            return false;\r\n        }\r\n\r\n        var\r\n            self = this,    //pointing at dycalendar object\r\n\r\n            dateObj = new Date(),\r\n\r\n            //default settings\r\n            defaults = {\r\n                type: \"day\",\r\n                month: dateObj.getMonth(),\r\n                year: dateObj.getFullYear(),\r\n                date: dateObj.getDate(),\r\n                monthformat: \"full\",\r\n                dayformat: \"full\",\r\n                highlighttoday: false,\r\n                highlighttargetdate: false,\r\n                prevnextbutton: \"hide\"\r\n            };\r\n\r\n        //extend user options with predefined options\r\n        option = extendSource(option, defaults);\r\n\r\n        drawCalendar(option);\r\n\r\n    };\r\n\r\n    //------------------------------ dycalendar.draw() ends here ------------\r\n\r\n    /**\r\n     * this function will draw the calendar inside the target container.\r\n     */\r\n    function drawCalendar(option) {\r\n\r\n        var\r\n            //variables for creating calendar\r\n            calendar,\r\n            calendarHTML,\r\n            targetedElementBy = \"id\",\r\n            targetElem,\r\n\r\n            //other variables\r\n            i, len, elemArr;\r\n\r\n        //find target element by\r\n        if (option.target[0] === \"#\") {\r\n            targetedElementBy = \"id\";\r\n        } else if (option.target[0] === \".\") {\r\n            targetedElementBy = \"class\";\r\n        }\r\n        targetElem = option.target.substring(1);\r\n\r\n        //get calendar HTML\r\n        switch (option.type) {\r\n            case \"day\":\r\n                //get calendar detail\r\n                calendar = getCalendar(option.year, option.month, option.date);\r\n                //get calendar html\r\n                calendarHTML = drawCalendarDay(calendar, option);\r\n                break;\r\n\r\n            case \"month\":\r\n                //get calendar detail\r\n                calendar = getCalendar(option.year, option.month, option.date);\r\n                //get calendar html\r\n                calendarHTML = drawCalendarMonthTable(calendar, option);\r\n                break;\r\n\r\n            default:\r\n                global.console.error(\"Invalid type\");\r\n                return false;\r\n        }\r\n\r\n        //draw calendar\r\n        if (targetedElementBy === \"id\") {\r\n\r\n            document.getElementById(targetElem).innerHTML = calendarHTML.outerHTML;\r\n\r\n        } else if (targetedElementBy === \"class\") {\r\n\r\n            elemArr = document.getElementsByClassName(targetElem);\r\n            for (i = 0, len = elemArr.length; i < len; i = i + 1) {\r\n                elemArr[i].innerHTML = calendarHTML.outerHTML;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //events\r\n    onClick();\r\n\r\n    //attach to global window object\r\n    global.dycalendar = dycalendar;\r\n\r\n}(typeof window !== \"undefined\" ? window : this));\r\n",
    "usedDeprecatedRules":[ ]
  },
  {
    "filePath":"/app/eslint.config.js",
    "messages":[ ],
    "suppressedMessages":[ ],
    "errorCount":0,
    "fatalErrorCount":0,
    "warningCount":0,
    "fixableErrorCount":0,
    "fixableWarningCount":0,
    "usedDeprecatedRules":[ ]
  },
  {
    "filePath":"/app/main.js",
    "messages":[ ],
    "suppressedMessages":[ ],
    "errorCount":0,
    "fatalErrorCount":0,
    "warningCount":0,
    "fixableErrorCount":0,
    "fixableWarningCount":0,
    "usedDeprecatedRules":[ ]
  }
]